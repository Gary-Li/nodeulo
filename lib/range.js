// Generated by CoffeeScript 1.7.1
(function() {
  var Range, accumuloTypes;

  accumuloTypes = require('./thrift-generated/proxy_types');

  Range = (function() {
    function Range(start, end) {
      this.start = start;
      this.end = end;
    }

    Range.prototype.out = function() {
      var r, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9;
      r = new accumuloTypes.Range();
      r.startInclusive = (_ref = this.start.include) != null ? _ref : true;
      r.endInclusive = (_ref1 = this.end.include) != null ? _ref1 : true;
      if (this.start.row) {
        r.start = new accumuloTypes.Key();
        r.start.row = this.start.row;
        r.start.colFamily = (_ref2 = this.start.columnFamily) != null ? _ref2 : null;
        r.start.colQualifier = (_ref3 = this.start.columnQualifier) != null ? _ref3 : null;
        r.start.colVisibility = (_ref4 = this.start.columnVisibility) != null ? _ref4 : null;
        r.start.timestamp = (_ref5 = this.start.timestamp) != null ? _ref5 : null;
      }
      if (this.end.row) {
        r.stop = new accumuloTypes.Key();
        r.stop.row = this.end.row;
        r.stop.colFamily = (_ref6 = this.end.columnFamily) != null ? _ref6 : null;
        r.stop.colQualifier = (_ref7 = this.end.columnQualifier) != null ? _ref7 : null;
        r.stop.colVisibility = (_ref8 = this.end.columnVisibility) != null ? _ref8 : null;
        return r.stop.timestamp = (_ref9 = this.end.timestamp) != null ? _ref9 : null;
      }
    };

    return Range;

  })();

  exports.Range = Range;

}).call(this);
